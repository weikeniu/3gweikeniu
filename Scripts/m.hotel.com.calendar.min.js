(function () {
    var k = "function",
        g = "choosed",
        i = "inactive",
        l = "td[date]",
        e = "]",
        d = "[date=",
        j = "date",
        h = "click",
        f = "yyyy-MM-dd",
        a = 10,
        c = true,
        b = false;
    ChineseCalendar = function (g) {
        var d = 1900,
            f = 22176,
            e = this;
        e.dateObj = g != undefined ? g : new Date;
        e.SY = e.dateObj.getFullYear();
        e.SM = e.dateObj.getMonth();
        e.SD = e.dateObj.getDate();
        e.lunarInfo = [19416, 19168, 42352, 21717, 53856, 55632, 91476, f, 39632, 21970, 19168, 42422, 42192, 53840, 119381, 46400, 54944, 44450, 38320, 84343, 18800, 42160, 46261, 27216, 27968, 109396, 11104, 38256, 21234, 18800, 25958, 54432, 59984, 28309, 23248, 11104, 100067, 37600, 116951, 51536, 54432, 120998, 46416, f, 107956, 9680, 37584, 53938, 43344, 46423, 27808, 46416, 86869, 19872, 42416, 83315, 21168, 43432, 59728, 27296, 44710, 43856, 19296, 43748, 42352, 21088, 62051, 55632, 23383, f, 38608, 19925, 19152, 42192, 54484, 53840, 54616, 46400, 46752, 103846, 38320, 18864, 43380, 42160, 45690, 27216, 27968, 44870, 43872, 38256, 19189, 18800, 25776, 29859, 59984, 27480, 21952, 43872, 38613, 37600, 51552, 55636, 54432, 55888, 30034, f, 43959, 9680, 37584, 51893, 43344, 46240, 47780, 44368, 21977, 19360, 42416, 86390, 21168, 43312, 31060, 27296, 44368, 23378, 19296, 42726, 42208, 53856, 60005, 54576, 23200, 30371, 38608, 19415, 19152, 42192, 118966, 53840, 54560, 56645, 46496, 22224, 21938, 18864, 42359, 42160, 43600, 111189, 27936, 44448, 84835];
        e.leapMonth = function (a) {
            return this.lunarInfo[a - d] & 15
        };
        e.monthDays = function (b, a) {
            return this.lunarInfo[b - d] & 65536 >> a ? 30 : 29
        };
        e.leapDays = function (a) {
            return this.leapMonth(a) ? this.lunarInfo[a - d] & 65536 ? 30 : 29 : 0
        };
        e.lYearDays = function (c) {
            for (var b = 348, a = 32768; a > 8; a >>= 1) b += this.lunarInfo[c - d] & a ? 1 : 0;
            return b + this.leapDays(c)
        };
        e.Lunar = function (k) {
            var i = this,
                e,
                h = 0,
                g = 0,
                a = {},
                j = new Date(d, 0, 31),
                f = (k - j) / 8.64e7;
            a.dayCyl = f + 40;
            a.monCyl = 14;
            for (e = d; e < 2050 && f > 0; e++) {
                g = i.lYearDays(e);
                f -= g;
                a.monCyl += 12
            }
            if (f < 0) {
                f += g;
                e--;
                a.monCyl -= 12
            }
            a.year = e;
            a.yearCyl = e - 1864;
            h = i.leapMonth(e);
            a.isLeap = b;
            for (e = 1; e < 13 && f > 0; e++) {
                if (h > 0 && e == h + 1 && a.isLeap == b) {
                    --e;
                    a.isLeap = c;
                    g = i.leapDays(a.year)
                } else g = i.monthDays(a.year, e);
                if (a.isLeap == c && e == h + 1) a.isLeap = b;
                f -= g;
                if (a.isLeap == b) a.monCyl++
            }
            if (f == 0 && h > 0 && e == h + 1) if (a.isLeap) a.isLeap = b;
            else {
                a.isLeap = c; --e; --a.monCyl
            }
            if (f < 0) {
                f += g; --e; --a.monCyl
            }
            a.month = e;
            a.day = f + 1;
            return a
        };
        e.cDay = function (e, d) {
            var c = ["日", "一", "二", "三", "四", "五", "六", "七", "八", "九", "十"],
                f = ["初", "十", "廿", "卅", "　"],
                b;
            if (e > a) b = "十" + c[e - a];
            else b = c[e];
            b += "月";
            switch (d) {
                case a:
                    b += "初十";
                    break;
                case 20:
                    b += "二十";
                    break;
                case 30:
                    b += "三十";
                    break;
                default:
                    b += f[Math.floor(d / a)];
                    b += c[d % a]
            }
            return b
        };
        e.solarDay2 = function () {
            var c = this,
                d = new Date(c.SY, c.SM, c.SD),
                b = c.Lunar(d),
                e = (b.month >= a ? b.month : "0" + b.month) + "" + (b.day >= a ? b.day : "0" + b.day);
            b = null;
            return e
        };
        e.weekday = function () {
            var a = ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"];
            return a[this.dateObj.getDay()]
        };
        e.YYMMDD = function () {
            var a = [this.SY, "年", this.SM + 1, "月", this.SD, "日"];
            return a.join("")
        }
    };
    DisplayCalendar = function (j, l, e, g, i, d, b, k, o, n) {
        var a = this;
        a.chineseHoliday = {
            "1230": "除夕",
            "0101": "春节",
            "0115": "元宵",
            "0505": "端午",
            "0707": "七夕",
            "0815": "中秋",
            "0909": "重阳"
        },
        a.holiday = {
            "0101": "元旦",
            "0214": "情人节",
            "0404": "清明",
            "0501": "五一",
            "1001": "国庆",
            "1225": "圣诞节"
        };
        a.aWeek = ["周日", "周一", "周二", "周三", "周四", "周五", "周六"];
        a.dWrap = l;
        a.dStartInput = e;
        a.dBackInput = g;
        a.isSuportAnimate = hotelhotelweb.utils.isSuportAnimate();
        var h = hotelhotelweb.ServerDate ? hotelhotelweb.ServerDate.replace(/\//g, "-") : null;

        a.sStartDate = d ? d : h || (new Date).format(f);
        a.sBackDate = b ? b : (new Date).addDays(1);
        a.limitDays = i;
        a.sTitle = k;
        a.sId = Oui.Tools.CreateId();
        var m = a;
        a.oWatchHash = new Oui.WatchHash(a.sId,
            function () {
                m.hideCalendar()
            });
        a.sLastDate = "";
        a.BeginDate;
        a.EndDate;
        a.callback = j;
        a.callbacks = [];
        a.bStartFocused = c;
        a.startDatePos;
        a.setOption(n);
        a.createCalendar()
    };
    DisplayCalendar.prototype = {
        setOption: function (b) {
            for (var a in b) switch (a) {
                case "BeginDate":
                case "EndDate":
                    this[a] = new Date(Date.ParseString(b[a]))
            }
        },
        getNextDay: function (c) {
            var b = c.split("-");
            return (new Date(b[0], parseInt(b[1], a) - 1, parseInt(b[2], a) + 1)).format(f)
        },
        isLeap: function (a) {
            return a % 100 == 0 ? (res = a % 400 == 0 ? 1 : 0) : (res = a % 4 == 0 ? 1 : 0)
        },
        createCalendar: function () {
            var a = this;
            for (var k = a, i = '<header role="banner"><h1>' + a.sTitle + '</h1><div id="calClose" class="lefthead"><div class="header_return"></div></div></header>', f = 0; f < 6; f++) i += a.createSingleCalendar(f);
            a.dWrap.html(i);
            $("#calClose").bind(h,
                function (a) {
                    a.preventDefault();
                    k.hideCalendar()
                });
            a.bindEvents();
            a.sLastDate = $("td[nextdate]").last().attr(j);
            var g = $(d + a.sStartDate + e).index();
            if (a.callback) {
                var b = {};
                b.start = a.infoMaker(a.sStartDate, g);
                if (a.dBackInput) b.back = a.infoMaker(a.sBackDate, g + 1);
                a.callback.call(a, b, c)
            }
        },
        createSingleCalendar: function (A) {
            var i = "</td>",
                d = "</td><td>",
                a = this,
                e = [],
                r = hotelhotelweb.ServerDate ? new Date(Date.ParseString(hotelhotelweb.ServerDate)) : new Date,
                n = r.getFullYear(),
                j = r.getMonth() + A,
                s = r.format(f),
                w = a.getNextDay(s),
                y = a.getNextDay(w),
                q = new Date(n, j, 1);
                n = q.getFullYear(),
                firstday = q.getDay(),
                j = q.getMonth(),
                monthDays = [31, 28 + a.isLeap(n), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            if (a.EndDate && a.EndDate.getMonth() < j) return "";
            column = Math.ceil((monthDays[j] + firstday) / 7);
            e.push("<div class=calendar>");
            e.push("<h1>" + n + "年" + (j + 1) + "月</h1>");
            e.push("<div class=calGrid>");
            e.push("<table><tr><td>" + a.aWeek[0] + d + a.aWeek[1] + d + a.aWeek[2] + d + a.aWeek[3] + d + a.aWeek[4] + d + a.aWeek[5] + d + a.aWeek[6] + "</td></tr>");
            for (var t = 0; t < column; t++) {
                e.push("<tr>");
                for (var u = 0; u < 7; u++) {
                    var p,
                        h,
                        v,
                        z = t * 7 + u,
                        k = z - firstday + 1;
                    if (k <= 0 || k > monthDays[j]) {
                        k = "&nbsp;";
                        h = null
                    } else {
                        p = new Date(n, j, k);
                        h = p.format(f);
                        v = (new Date(n, j, k + 1)).format(f)
                    }
                    if (h) {
                        var m = "<td nextdate=" + v + " date=" + h + " ",
                            l = "",
                            x = (new ChineseCalendar(p)).solarDay2(),
                            o = h.split("-"),
                            g = c;
                        if (s > h || a.BeginDate && a.EndDate <= p) l = "class=past";
                        if (a.chineseHoliday[x]) {
                            m += l + ">" + a.chineseHoliday[x] + i;
                            g = b
                        }
                        if (a.holiday[o[1] + o[2]]) {
                            m += l + ">" + a.holiday[o[1] + o[2]] + i;
                            g = b
                        }
                        if (g && s == h) {
                            m += l + ">今天</td>";
                            g = b
                        }
                        if (g && w == h) {
                            m += l + ">明天</td>";
                            g = b
                        }
                        if (g && y == h) {
                            m += l + ">后天</td>";
                            g = b
                        }
                        if (g) m += l + ">" + k + i;
                        e.push(m)
                    } else e.push("<td class='null'>" + k + i)
                }
                e.push("</tr>")
            }
            e.push("</table>");
            e.push("</div>");
            e.push("</div>");
            return e.join("")
        },
        renderLimitDays: function () {
            var b = this.sStartDate.split("-");
            $(l).addClass(i);
            for (var c = 0; c < this.limitDays; c++) {
                var g = (new Date(b[0], parseInt(b[1], a) - 1, parseInt(b[2], a) + c)).format(f);
                $(d + g + e).removeClass(i)
            }
        },
        showCalendar: function () {
            var b = "#datestarttag",
                c = "absolute",
                a = this;
            if (a.isSuportAnimate) a.dWrap.css({
                position: c,
                top: 0,
                left: 0,
                width: "100%"
            }).fadeIn("fast",
                function () {
                    var a = $(b);
                    if (a.length) {
                        this.startDatePos = m(a[0]).top;
                        $("html,body").animate({
                            scrollTop: this.startDatePos
                        },1e3)
                    }
                });
            else {
                a.dWrap.css({
                    position: c,
                    top: 0,
                    left: 0,
                    width: "100%"
                }).show();
                var d = $(b);
                if (d.length) {
                    a.startDatePos = m(d[0]).top;
                    window.scrollTo(0, a.startDatePos)
                }
            }
            a.dWrap.css("z-index", Oui.Tools.GetZIndex());
            $("body").append(a.dWrap);
            a.oWatchHash.Start()
        },
        resetCalendar: function () {
            var f = "datestarttag",
                b = "id",
                a = ".calendar",
                i = this;
            i.dWrap.find(".choosed").removeClass(g);
            if (i.dBackInput) {
                var c = $(d + i.sStartDate + e),
                    j = $(d + i.sBackDate + e);
                c.addClass(g);
                j.addClass(g);
                var h;
                $(a).removeAttr(b);
                if (c.length) {
                    h = c.closest(a);
                    h.attr(b, f)
                } else if (j.length) {
                    h = c.closest(a);
                    h.attr(b, f)
                }
                window.DisplayCalendar.single && j.removeClass(g)
            } else {
                var c = $(d + i.sStartDate + e);
                c.addClass(g);
                var h;
                $(a).removeAttr(b);
                if (c.length) {
                    h = c.closest(a);
                    h.attr(b, f)
                }
            }
        },
        hideCalendar: function () {
            var a = this;
            if (a.isSuportAnimate) a.dWrap.fadeOut("fast");
            else a.dWrap.hide();
            typeof a.OnHide == k && a.OnHide();
            a.oWatchHash.End()
        },
        infoMaker: function (c, f) {
            if (c) {
                var h = $(d + c + e).html(),
                    g = c.split("-"),
                    f = f == 7 ? 0 : f,
                    b = {};
                b.year = g[0];
                b.month = parseInt(g[1], a);
                b.date = parseInt(g[2], a);
                b.sWeek = this.aWeek[f];
                b.des = isNaN(parseInt(h, a)) ? h : "";
                b.full = c;
                return b
            }
        },
        chooseDays: function (b) {
            var a = this;
            if (!b.hasClass(i) && !b.hasClass("past") && b.attr(j)) {
                var d = b.attr(j),
                    e = b.index(),
                    c = {};
                if (a.dBackInput && a.bStartFocused && d == a.sLastDate) if (!window.DisplayCalendar.single) return;
                if (a.dBackInput) if (a.bStartFocused) {
                    a.sStartDate = d;
                    a.sBackDate = b.attr("nextdate");
                    a.dStartInput.val(a.sStartDate);
                    a.dBackInput.val(a.sBackDate);
                    c.start = a.infoMaker(a.sStartDate, e);
                    c.back = a.infoMaker(a.sBackDate, e + 1)
                } else if (d == a.sStartDate) {
                    utils.MsgBox("抱歉，前后日期不能为同一天！");
                    return
                } else {
                    a.sBackDate = d;
                    a.dBackInput.val(a.sBackDate);
                    c.back = a.infoMaker(a.sBackDate, e)
                } else {
                    a.sStartDate = d;
                    a.dStartInput && a.dStartInput.val(a.sStartDate);
                    c.start = a.infoMaker(a.sStartDate, e)
                }
                b.addClass(g);
                a.hideCalendar();
                a.callback && a.callback(c);
                for (var f = 0, h = a.callbacks.length; f < h; f++) a.callbacks[f].call(a, c)
            }
        },
        chooseStart: function () {
            var a = this;
            a.resetCalendar();
            $(l).removeClass(i);
            typeof a.OnShow == k && a.OnShow();
            a.showCalendar();
            a.bStartFocused = c
        },
        choosedBack: function () {
            var a = this;
            a.resetCalendar();
            a.limitDays && a.renderLimitDays();
            a.showCalendar();
            a.bStartFocused = b
        },
        bindEvents: function () {
            var a = this,
                b = a;
            a.dWrap.delegate("td", h,
                function (a) {
                    a.preventDefault();
                    b.chooseDays($(this))
                });
            a.dStartInput && a.dStartInput.bind(h,
                function (a) {
                    a.preventDefault();
                    b.chooseStart()
                });
            a.dBackInput && a.dBackInput.bind(h,
                function (a) {
                    a.preventDefault();
                    b.choosedBack()
                })
        },
        getStartDate: function () {
            return this.sStartDate
        },
        getEndDate: function () {
            return this.sBackDate
        },
        addCallback: function (a) {
            typeof a == k && this.callbacks.push(a)
        },
        triggerCallBack: function () {
            this.chooseDays($(d + this.sStartDate + e))
        },
        OnShow: function () { },
        OnHide: function () { }
    };
    function m(a) {
        var c = 0,
            b = 0;
        if (a) do {
            c += a.offsetTop;
            b += a.offsetLeft
        }
        while (a = a.offsetParent);
        return {
            top: c,
            left: b
        }
    }
})();