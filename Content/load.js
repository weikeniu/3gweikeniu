(function (a) { a.fn.lazyload = function (e) { var h = { threshold: 100, failurelimit: 3, effect: "show", scrollBuffer: 500 }; var g = null; if (e) { a.extend(h, e); } var c = this; var b = function () { var i = 0; c.each(function () { if (a.belowthebottom(this, h) || a.rightofend(this, h)) { if (i++ > h.failurelimit) { return false; } } else { if (a.abovethetop(this, h) || a.leftofbegin(this, h)) { return true; } else { a(this).trigger("appear"); } } }); c = a(a.grep(c, function (j) { return !j.loaded; })); }; var d = a(window).scrollTop(); var f = function () { var i = a(window).scrollTop(); if (Math.abs(i - d) < h.threshold) { return false; } d = i; b(); }; a(window).bind("scroll", function () { clearTimeout(g); g = setTimeout(f, h.scrollBuffer); }); a(this).bind("check", b); this.each(function () { var i = this; if (a(i).attr("data-orc")) { if (a.belowthebottom(i, h) || a.abovethetop(i, h)) { i.loaded = false; } else { a(i).attr("src", a(i).attr("data-orc")); i.loaded = true; } } else { i.loaded = true; } a(i).bind("appear", function () { if (!this.loaded) { a("<img />").bind("load", function () { a(i).hide().attr("src", a(i).attr("data-orc"))[h.effect](h.effectspeed); i.loaded = true; }).attr("src", a(i).attr("data-orc")); } }); }); b(); return this; }; a.belowthebottom = function (b, c) { return a(b).offset().top > a(window).height() + a(window).scrollTop() + c.threshold; }; a.rightofend = function (b, c) { return a(b).offset().left > a(window).width() + a(window).scrollLeft() + c.threshold; }; a.abovethetop = function (b, c) { return a(b).offset().top + a(b).height() < a(window).scrollTop() - c.threshold; }; a.leftofbegin = function (b, c) { return a(b).offset().left + a(b).width() < a(window).scrollLeft() - c.threshold; }; })(jquip);